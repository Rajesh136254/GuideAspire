<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up - GuideAspire</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap">
    <link rel="icon" type="image/png" sizes="32x32" href="Homepage.png">
    <style>
        body {
            margin: 0;
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #6a11cb, #2575fc);
            color: #fff;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            overflow: hidden;
            position: relative;
        }

        body::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 10%, transparent 10%);
            background-size: 20px 20px;
            animation: moveBackground 10s linear infinite;
            z-index: -1;
        }

        @keyframes moveBackground {
            from { background-position: 0 0; }
            to { background-position: 100% 100%; }
        }

        .auth-container {
            background: rgba(255, 255, 255, 0.1);
            padding: 40px;
            border-radius: 20px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(15px);
            width: 100%;
            max-width: 400px;
            text-align: center;
            animation: float 5s ease-in-out infinite;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-10px); }
        }

        .auth-container h2 {
            font-size: 28px;
            margin-bottom: 20px;
            color: #fff;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }

        form {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        label {
            font-size: 16px;
            font-weight: 500;
            color: #fff;
            text-align: left;
        }

        input {
            padding: 12px;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            background: rgba(255, 255, 255, 0.2);
            color: #fff;
            transition: background 0.3s ease, box-shadow 0.3s ease;
        }

        input::placeholder {
            color: rgba(255, 255, 255, 0.7);
        }

        input:focus {
            background: rgba(255, 255, 255, 0.3);
            box-shadow: 0 0 8px rgba(255, 255, 255, 0.5);
            outline: none;
        }

        .btn {
            padding: 12px;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.3s ease, background 0.3s ease;
        }

        .primary-btn {
            background: #00f2fe;
            color: #000;
        }

        .primary-btn:hover {
            background: #4facfe;
            transform: translateY(-3px);
        }

        .loginsign {
            margin-top: 20px;
            font-size: 14px;
            color: rgba(255, 255, 255, 0.8);
        }

        .loginsign a {
            color: #00f2fe;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .loginsign a:hover {
            color: #4facfe;
        }

        .forgot-password {
            margin-top: 10px;
            font-size: 14px;
            color: rgba(255, 255, 255, 0.8);
        }

        .forgot-password a {
            color: #00f2fe;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .forgot-password a:hover {
            color: #4facfe;
        }

        @media (max-width: 480px) {
            .auth-container {
                padding: 20px;
                width: 90%;
            }
            .auth-container h2 {
                font-size: 24px;
            }
            input, .btn {
                padding: 10px;
                font-size: 14px;
            }
            .loginsign, .forgot-password {
                font-size: 12px;
            }
        }
    </style>
</head>
<body>
    <div class="auth-container" id="authContainer">
        <h2 id="formTitle">Sign Up</h2>
        <form id="signupForm">
            <label for="name">Name</label>
            <input type="text" id="name" name="name" placeholder="Enter your name" required>
            <label for="email">Email</label>
            <input type="email" id="email" name="email" placeholder="Enter your email" required>
            <label for="password">Password</label>
            <input type="password" id="password" name="password" placeholder="Enter your password" required>
            <button type="submit" class="btn primary-btn">Sign Up</button>
        </form>
        <p class="loginsign">Already have an account? <a href="/login">Log In</a></p>
        <p class="forgot-password"><a href="#" id="forgotPasswordLink">Forgot Password?</a></p>
    </div>

    <div class="auth-container" id="forgotPasswordContainer" style="display: none;">
        <h2>Forgot Password</h2>
        <form id="forgotPasswordForm">
            <label for="forgotEmail">Email</label>
            <input type="email" id="forgotEmail" name="email" placeholder="Enter your email" required>
            <label for="newPassword">New Password</label>
            <input type="password" id="newPassword" name="newPassword" placeholder="Enter new password" required>
            <button type="submit" class="btn primary-btn">Reset Password</button>
        </form>
        <p class="loginsign"><a href="#" id="backToSignup">Back to Sign Up</a></p>
    </div>

    <script>
        // Toggle between Sign Up and Forgot Password forms
        const authContainer = document.getElementById("authContainer");
        const forgotPasswordContainer = document.getElementById("forgotPasswordContainer");
        const forgotPasswordLink = document.getElementById("forgotPasswordLink");
        const backToSignup = document.getElementById("backToSignup");

        forgotPasswordLink.addEventListener("click", (e) => {
            e.preventDefault();
            authContainer.style.display = "none";
            forgotPasswordContainer.style.display = "block";
        });

        backToSignup.addEventListener("click", (e) => {
            e.preventDefault();
            forgotPasswordContainer.style.display = "none";
            authContainer.style.display = "block";
        });

        // Handle Signup Form Submission
        document.getElementById("signupForm").addEventListener("submit", async (e) => {
            e.preventDefault();

            const name = document.getElementById("name").value.trim();
            const email = document.getElementById("email").value.trim();
            const password = document.getElementById("password").value;

            if (!name || !email || !password) {
                alert("Please fill in all fields.");
                return;
            }

            try {
                const response = await fetch("http://localhost:4000/signup", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ name, email, password }),
                });

                if (!response.ok) {
                    const text = await response.text();
                    let errorMessage = "Signup failed.";
                    try {
                        const data = JSON.parse(text);
                        errorMessage = data.message || errorMessage;
                    } catch {
                        console.error("Non-JSON response:", text);
                        errorMessage = "Server error. Please try again.";
                    }
                    throw new Error(errorMessage);
                }

                const data = await response.json();
                alert("Signup successful! Redirecting to login...");
                window.location.href = "/login"; // Client-side redirect
            } catch (err) {
                console.error("Signup error:", err);
                alert(err.message || "An error occurred during signup. Please try again.");
            }
        });

        // Handle Forgot Password Form Submission
        document.getElementById("forgotPasswordForm").addEventListener("submit", async (e) => {
            e.preventDefault();

            const email = document.getElementById("forgotEmail").value.trim();
            const newPassword = document.getElementById("newPassword").value;

            if (!email || !newPassword) {
                alert("Please fill in all fields.");
                return;
            }

            try {
                const response = await fetch("http://localhost:4000/forgot-password", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ email, newPassword }),
                });

                if (!response.ok) {
                    const text = await response.text();
                    let errorMessage = "Failed to reset password.";
                    try {
                        const data = JSON.parse(text);
                        errorMessage = data.message || errorMessage;
                    } catch {
                        console.error("Non-JSON response:", text);
                        errorMessage = "Server error. Please try again.";
                    }
                    throw new Error(errorMessage);
                }

                const data = await response.json();
                alert("Password reset successful! Redirecting to login...");
                window.location.href = "/login";
            } catch (err) {
                console.error("Forgot password error:", err);
                alert(err.message || "An error occurred. Please try again.");
            }
        });
    </script>
</body>
</html>